
package org.usfirst.frc.team2129.robot;

import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * Note that the file actually needs to be called "Robot.java"
 * This should be able to turn
 * Signs in front of motor output values are likely incorrect
 * left wheel is port 0
 * right wheel is port 1
 * joystick is port 0
 * let me know if turning doesn't work right--i wouldn't be surprised
 * all the relevant shit is in teleopPeriodic()
 *  --Simon Rothman
 */
public class Robot extends IterativeRobot {
	final String defaultAuto = "Default";
	final String customAuto = "My Auto";
	String autoSelected;
	SendableChooser chooser;
	RobotDrive robot;
	Joystick stick;

	/**
	 * This function is run when the robot is first started up and should be
	 * used for any initialization code.
	 */
	public void robotInit() {
		chooser = new SendableChooser();
		chooser.addDefault("Default Auto", defaultAuto);
		chooser.addObject("My Auto", customAuto);
		SmartDashboard.putData("Auto choices", chooser);
		robot = new RobotDrive(0, 1);
		robot.setExpiration(0.1);
		stick = new Joystick(0);
	}

	/**
	 * This autonomous (along with the chooser code above) shows how to select
	 * between different autonomous modes using the dashboard. The sendable
	 * chooser code works with the Java SmartDashboard. If you prefer the
	 * LabVIEW Dashboard, remove all of the chooser code and uncomment the
	 * getString line to get the auto name from the text box below the Gyro
	 *
	 * You can add additional auto modes by adding additional comparisons to the
	 * switch structure below with additional strings. If using the
	 * SendableChooser make sure to add them to the chooser code above as well.
	 */
	public void autonomousInit() {
		autoSelected = (String) chooser.getSelected();
		// autoSelected = SmartDashboard.getString("Auto Selector",
		// defaultAuto);
		System.out.println("Auto selected: " + autoSelected);
	}

	/**
	 * This function is called periodically during autonomous
	 */
	public void autonomousPeriodic() {

	}

	/**
	 * This function is called periodically during operator control
	 */
	public void teleopPeriodic() {
		double x = stick.getX();
		double y = stick.getY();
		double r = Math.sqrt(x * x + y * y);
		if (Math.abs(x) < 0.05) { //straight forward/backward
			robot.setLeftRightMotorOutputs(y, -y); //is inverted because one motor is oposite the other i think
		} else if(Math.abs(y) < 0.05){ //full turn
			robot.setLeftRightMotorOutputs(x, x); //is not inverted because turning
		} else{ //mixed turn IF THIS DOESN"T WORK LET ME KNOW
			if(x >0){ //turning right-- signs will likely need adjusting--i dont quite know which motor is which
				robot.setLeftRightMotorOutputs(r, r*Math.cos(2*Math.asin(y/r))); //should scale right motor--will need testing
			} else{ //turning left
				robot.setLeftRightMotorOutputs(r*Math.cos(2*Math.asin(y/r)), r);
			}
		}

	}

	/**
	 * This function is called periodically during test mode
	 */
	public void testPeriodic() {

	}

}
